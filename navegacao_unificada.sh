#!/bin/bash
# üß≠ NAVEGA√á√ÉO UNIFICADA - TODAS AS FUNDA√á√ïES INTEGRADAS

echo "=================================================="
echo "üß≠ NAVEGA√á√ÉO UNIFICADA - FUNDA√á√ïES INTEGRADAS"
echo "=================================================="

while true; do
    echo ""
    echo "üåâ REALIDADES DISPON√çVEIS:"
    echo "   1. üèóÔ∏è  EXPLORAR M√ìDULOS APP (Interface)"
    echo "   2. üèóÔ∏è  EXPLORAR M√ìDULOS ROOT (Sistema)" 
    echo "   3. üîó VER CONEX√ïES APP‚ÜîROOT"
    echo "   4. üìä VIS√ÉO GERAL UNIFICADA"
    echo "   5. üöÄ ACESSAR M√ìDULO ESPEC√çFICO"
    echo "   6. üîô VOLTAR"
    echo ""
    
    read -p "üëâ Sua escolha (1-6): " escolha
    
    case $escolha in
        1)
            echo ""
            echo "üèóÔ∏è  M√ìDULOS APP (Interface):"
            find . -path "*/src/app/module/M*" -type d 2>/dev/null | head -10 | while read mod; do
                basename=$(basename "$mod")
                if [ -f "$mod/manifesto.json" ]; then
                    echo "   ‚úÖ $basename - COM METADADOS"
                else
                    echo "   üìÅ $basename - SEM METADADOS"
                fi
            done
            total=$(find . -path "*/src/app/module/M*" -type d 2>/dev/null | wc -l)
            echo "   üìä Total: $total m√≥dulos APP"
            ;;
        2)
            echo ""
            echo "üèóÔ∏è  M√ìDULOS ROOT (Sistema):"
            find . -maxdepth 1 -type d -name "MODULO_*" | head -10 | while read mod; do
                basename=$(basename "$mod")
                if [ -f "$mod/MANIFESTO_$basename.md" ]; then
                    echo "   ‚úÖ $basename - COM MANIFESTO"
                else
                    echo "   üìÅ $basename - SEM MANIFESTO"
                fi
            done
            total=$(find . -maxdepth 1 -type d -name "MODULO_*" | wc -l)
            echo "   üìä Total: $total m√≥dulos ROOT"
            ;;
        3)
            echo ""
            echo "üîó CONEX√ïES APP‚ÜîROOT:"
            echo "   MODULO_9 ‚Üí M√ìDULOS APP: NEXO CENTRAL"
            echo "   MODULO_29 ‚Üí M√ìDULOS APP: COMANDO"
            echo "   MODULO_303 ‚Üí M√ìDULOS APP: PORTAL"
            echo ""
            echo "üí° Estas conex√µes permitem:"
            echo "   ‚Ä¢ Controle centralizado de todos os m√≥dulos"
            echo "   ‚Ä¢ Interface unificada de comando"
            echo "   ‚Ä¢ Navega√ß√£o dimensional entre realidades"
            ;;
        4)
            echo ""
            echo "üìä VIS√ÉO GERAL UNIFICADA:"
            echo "   üèóÔ∏è  M√≥dulos APP: $(find . -path "*/src/app/module/M*" -type d 2>/dev/null | wc -l)"
            echo "   üèóÔ∏è  M√≥dulos ROOT: $(find . -maxdepth 1 -type d -name "MODULO_*" | wc -l)"
            echo "   üìÑ Arquivos APP: $(find . -path "*/src/app/module/M*" -name "*.json" -o -name "*.tsx" -o -name "*.md" 2>/dev/null | wc -l)"
            echo "   üìÑ Arquivos ROOT: $(find . -maxdepth 2 -path "*/MODULO_*" -name "*.md" -o -name "*.sh" -o -name "*.json" 2>/dev/null | wc -l)"
            echo "   üîó Conex√µes: 3 principais (9, 29, 303)"
            echo ""
            echo "üåå SISTEMA: MULTIPLAS REALIDADES INTEGRADAS"
            ;;
        5)
            echo ""
            read -p "üî¢ Digite o n√∫mero do m√≥dulo (ex: M167 ou 29): " modulo
            if [[ "$modulo" =~ ^M[0-9]+$ ]]; then
                caminho=$(find . -path "*/src/app/module/$modulo" -type d 2>/dev/null | head -1)
                if [ -n "$caminho" ]; then
                    echo "   ‚úÖ M√≥dulo APP encontrado: $caminho"
                    ./explorar_diferencas.sh
                else
                    echo "   ‚ùå M√≥dulo APP n√£o encontrado: $modulo"
                fi
            elif [[ "$modulo" =~ ^[0-9]+$ ]]; then
                if [ -d "MODULO_$modulo" ]; then
                    echo "   ‚úÖ M√≥dulo ROOT encontrado: MODULO_$modulo"
                    ./explorar_diferencas.sh
                else
                    echo "   ‚ùå M√≥dulo ROOT n√£o encontrado: MODULO_$modulo"
                fi
            else
                echo "   ‚ùå Formato inv√°lido. Use M167 (APP) ou 29 (ROOT)"
            fi
            ;;
        6)
            echo "üîô Voltando..."
            break
            ;;
        *)
            echo "‚ùå Op√ß√£o inv√°lida!"
            ;;
    esac
done
