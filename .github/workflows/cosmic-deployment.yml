name: Cosmic Deployment

on:
  push:
    branches: [ main, cosmic ]
  pull_request:
    branches: [ main ]

jobs:
  cosmic-tests:
    name: Run Cosmic Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Run Unit Tests
        run: npm run test:unit
        
      - name: Run E2E Tests
        run: npm run test:e2e
        env:
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:3000
          
      - name: Run Security Scan
        run: npm run security-scan

  cosmic-deploy:
    name: Deploy to Cosmic Realm
    runs-on: ubuntu-latest
    needs: cosmic-tests
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Build Cosmic Application
        run: npm run build
        env:
          NEXT_PUBLIC_CDN_ENABLED: true
          NEXT_PUBLIC_CDN_DOMAIN: ${{ secrets.CDN_DOMAIN }}
          
      - name: Deploy to Kubernetes
        uses: steebchen/kubectl@v2
        with:
          config: ${{ secrets.KUBE_CONFIG }}
          command: set image deployment/alquimista-app alquimista=alquimista:${{ github.sha }}
          
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/alquimista-app
          kubectl get pods -l app=alquimista
          
      - name: Run Cosmic Health Check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          curl -f https://${{ secrets.PRODUCTION_DOMAIN }}/api/health/advanced

  cosmic-cdn-purge:
    name: Purge CDN Cache
    runs-on: ubuntu-latest
    needs: cosmic-deploy
    steps:
      - name: Purge Cloudflare Cache
        uses: jakejarvis/cloudflare-purge@v0.6.0
        with:
          zone: ${{ secrets.CLOUDFLARE_ZONE }}
          purgeEverything: true
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
