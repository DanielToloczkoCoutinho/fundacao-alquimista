
name: Cosmic Deployment  
on:  
  push:  
    branches: [ main ]  
  pull_request:  
    branches: [ main ]  
  workflow_dispatch:

jobs:

  # 1. Lint C√≥smico
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar Depend√™ncias
        run: npm ci

      - name: Lint C√≥smico
        run: npm run lint

  # 2. Testes Qu√¢nticos
  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Instalar Depend√™ncias
        run: npm ci

      - name: Testes Unit√°rios
        run: npm test

      - name: Testes E2E com Playwright
        uses: microsoft/playwright-github-action@v1
        with:
          run: |
            npm run test:e2e

  # 3. Experimentos de Caos (Face 7 - Auto-Cura)
  chaos:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl && sudo mv kubectl /usr/local/bin
      - name: Run Chaos Experiment
        run: kubectl apply -f chaos/chaos-experiment.json
      - name: Verify Chaos Rollout
        run: kubectl get podchaos fractal-resilience-test -n foundation-alchemist -o yaml


  # 4. Rollout Can√°rio
  deploy_canary:
    needs: [ test, chaos ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Instalar Argo Rollouts CLI
        run: |
          curl -sLO https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64
          chmod +x kubectl-argo-rollouts-linux-amd64
          sudo mv kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts

      - name: Deploy Can√°rio com Argo
        run: |
          kubectl rollout status rollout/module-9-rollout -n production --watch
          kubectl argo rollouts set image module-9-rollout container=fundacao-frontend:canary -n production

  # 5. Notifica√ß√£o de ChatOps
  notify:
    needs: deploy_canary
    runs-on: ubuntu-latest
    steps:
      - name: Enviar Notifica√ß√£o Slack
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          curl -X POST $SLACK_WEBHOOK \
            -H 'Content-type: application/json' \
            --data '{"text":"üöÄ Rollout can√°rio completo! O Ciclo C√≥smico pulsa na coer√™ncia m√°xima."}'

