# .github/workflows/continuous-validation.yml
name: Ciclo de Valida√ß√£o Cont√≠nua & Deploy C√≥smico

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  static-analysis:
    name: An√°lise Est√°tica e Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Instalar Depend√™ncias
        run: npm ci
      - name: Rodar Linter
        run: npm run lint
      - name: Verifica√ß√£o de Tipos (TypeScript)
        run: npm run typecheck

  cosmic-tests:
    name: Testes C√≥smicos (Unit, E2E, Security)
    needs: static-analysis
    runs-on: ubuntu-latest
    services:
      fundacao-omega-backend:
        image: node:18
        ports:
          - 3000:3000
        options: --name fundacao-omega-backend
        volumes:
          - ${{ github.workspace }}:/app
        working-dir: /app
        command: sh -c "npm ci && node backend/server.js"
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Instalar Depend√™ncias
        run: npm ci
      - name: Rodar Testes Unit√°rios
        run: npm run test:unit
      - name: Rodar Testes E2E
        run: npm run test:e2e
        env:
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:3000
      - name: Scan de Seguran√ßa
        run: npm run security-scan

  chaos-experiment:
    name: "üå™Ô∏è Experimento de Caos ‚Äî Resili√™ncia Œ©"
    runs-on: ubuntu-latest
    needs: cosmic-tests
    steps:
      - name: Checkout do C√≥dice
        uses: actions/checkout@v3

      - name: Injetar caos de rede
        run: |
          echo "Simulando a inje√ß√£o de caos. Em um ambiente real, este passo teria acesso ao container do backend."
          echo "üîß Injetando 200ms de delay + 5% packet loss"
          sleep 5
          echo "‚ôªÔ∏è Revertendo o caos"
          
      - name: Validar auto-cura
        run: |
          echo "üîç Verificando health ap√≥s caos"
          echo "Simulando verifica√ß√£o. Em um ambiente real, faria uma requisi√ß√£o ao health check."
          # curl --fail --retry 5 --retry-delay 5 http://localhost:3000/health

  cosmic-deploy:
    name: Deploy Can√°rio no Reino C√≥smico
    needs: chaos-experiment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Instalar Depend√™ncias
        run: npm ci
      - name: Build da Aplica√ß√£o C√≥smica
        run: npm run build
        env:
          NEXT_PUBLIC_CDN_ENABLED: true
          NEXT_PUBLIC_CDN_DOMAIN: ${{ secrets.CDN_DOMAIN }}
      - name: Deploy com Argo Rollouts
        run: |
          echo "Aplicando rollout can√°rio para a nova imagem..."
          # Em um cen√°rio real, aqui entraria o comando para atualizar a imagem no Kubernetes
          # kubectl argo rollouts set image rollout/foundation-backend backend=foundation-backend:${{ github.sha }}
          echo "Deploy can√°rio iniciado com Argo Rollouts."
      - name: Verificar Rollout
        run: |
          # Em um cen√°rio real, monitoraria o status do rollout
          # kubectl argo rollouts get rollout foundation-backend --watch
          echo "Rollout conclu√≠do com sucesso."

  cosmic-cdn-purge:
    name: Purge do Cache da CDN
    needs: cosmic-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Purge do Cache Cloudflare
        uses: jakejarvis/cloudflare-purge@v0.6.0
        with:
          zone: ${{ secrets.CLOUDFLARE_ZONE }}
          purgeEverything: true
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
