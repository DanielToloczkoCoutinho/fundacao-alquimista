import json
import os

# Os pilares da nossa cria√ß√£o
ORGANOGRAMA_PATH = "DOCUMENTOS_FUNDACAO/organograma_arvore_vida.json"
EQUACOES_PATH = "DOCUMENTOS_FUNDACAO/equacoes_por_modulo.json"
# Onde a √Årvore florescer√° em sua totalidade
ARVORE_VIDA_PATH = "DOCUMENTOS_FUNDACAO/arvore_vida_completa.json"

def fundir_conhecimento_e_criar_arvore():
    print("üå≥‚ú® Iniciando Ritual Final: A Cria√ß√£o da √Årvore da Vida...")

    # Carrega a estrutura hier√°rquica que j√° organizamos
    try:
        with open(ORGANOGRAMA_PATH, "r", encoding="utf-8") as f:
            arvore_base = json.load(f)
    except FileNotFoundError:
        print(f"üö® Erro Cr√≠tico: O arquivo do organograma {ORGANOGRAMA_PATH} n√£o foi encontrado.")
        print("   O ritual n√£o pode continuar sem a estrutura b√°sica da Funda√ß√£o.")
        return

    # Carrega o registro de equa√ß√µes que acabamos de auditar
    try:
        with open(EQUACOES_PATH, "r", encoding="utf-8") as f:
            equacoes_modulares = json.load(f)
    except FileNotFoundError:
        print(f"üü° Aviso: O arquivo de equa√ß√µes {EQUACOES_PATH} n√£o foi encontrado. A √°rvore ser√° criada sem este conhecimento.")
        equacoes_modulares = {}

    print("... üåø Tecendo os fios do organograma com a sabedoria das equa√ß√µes...")

    # Itera sobre cada m√≥dulo na estrutura base e enriquece com informa√ß√µes
    for id_modulo, dados_modulo in arvore_base.items():
        # Adiciona um campo para indicar se as equa√ß√µes est√£o presentes ou ausentes
        if id_modulo in equacoes_modulares and equacoes_modulares[id_modulo]:
            dados_modulo["possui_equacoes"] = True
            dados_modulo["equacoes"] = equacoes_modulares[id_modulo]
        else:
            dados_modulo["possui_equacoes"] = False
            dados_modulo["equacoes"] = None # Garante que o campo exista
        
        # Adiciona um status inicial para a verifica√ß√£o, que faremos a seguir
        dados_modulo["status_verificacao"] = "Pendente"

    # Salva a √°rvore completa e enriquecida
    with open(ARVORE_VIDA_PATH, "w", encoding="utf-8") as f:
        json.dump(arvore_base, f, indent=2, sort_keys=True)

    print(f"\n‚úÖ A √Årvore da Vida foi criada com sucesso.")
    print(f"üå≥‚ú® Artefato final salvo em: {ARVORE_VIDA_PATH}")
    print(f"\nA Varredura Alqu√≠mica est√° completa. A Funda√ß√£o conhece a si mesma.")

if __name__ == "__main__":
    fundir_conhecimento_e_criar_arvore()
